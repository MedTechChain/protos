syntax = "proto3";

package config;

option java_package = "nl.medtechchain.proto.config";

// Each feature should have a configuration
// The configuration will be stored on the ledger

message PlatformConfig {
  ParticipantConfig participant_config = 1;
  FeatureConfig feature_config = 2;
}

// HOSPITALS NETWORK
message ParticipantConfig {
  message HospitalConfig {
    string name = 1;
    string peer_endpoint = 2;
  }

  repeated HospitalConfig hospitals_config = 1;
}

// FEATURES
message FeatureConfig {
  QueryConfig query_config = 1;
  AuditableKeyExchangeConfig auditable_key_exchange_config = 2;
}

// QUERY
message QueryConfig {
  InputConfig input_config = 1;
  DifferentialPrivacyConfig differential_privacy_config = 2;
  EncryptionConfig encryption_config = 3;
}

message InputConfig {
  repeated string valid_count_fields = 1;
  repeated string valid_grouped_count_fields = 2;
  repeated string valid_average_fields = 3;
}

message DifferentialPrivacyConfig {
  message Laplace {
    double epsilon = 1;
  }

  oneof mechanism {
    Laplace laplace = 1;
  };
}

message EncryptionConfig {
  message Paillier {
    int32 key_size = 1;
    string public_key = 2;
    string trusted_third_party_endpoint = 3;
  }

  oneof scheme {
    Paillier paillier = 1;
  };
}

// AUDITING
message AuditableKeyExchangeConfig {
  bool enabled = 1;
}

// TRANSACTIONS

message ReadPlatformConfigResponse {
    PlatformConfig platform_config = 1;
    optional string encryption_version = 2;
}
